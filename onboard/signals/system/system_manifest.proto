syntax = "proto2";

package moz.msg;
option java_package = "moz.msg";

import "nanopb.proto";

// Represents the complete configuration for a vehicle's system including software and required
// artifacts.
message SystemManifest {
  required string id = 1 [(nanopb).max_length = 37];
  required SystemConfig system_config = 2;
}

message SystemConfig {
  repeated ZoneConfig zone_configs = 1 [(nanopb).max_count = 7];
}

message ZoneConfig {
  required string zone_name = 1 [(nanopb).max_length = 40];
  repeated TargetConfig target_configs = 2 [(nanopb).max_count = 50];
}

// Config of a software component (target) that can be installed in the vehicle.
// Targets are the super set of all installable softwares.
message TargetConfig {
  required string target_name = 1 [(nanopb).max_length = 37];
  oneof config {
    MpkConfig mpk_config = 2;
    EcuConfig ecu_config = 3;
    ApkConfig apk_config = 4;
    NetgraphConfig netgraph_config = 5;
  }
}

// All configs are designed to be extensible.
message MpkConfig {
  // id is the hash of the config.
  required string id = 1 [(nanopb).max_length = 17];
}

message EcuConfig {
  required string id = 1 [(nanopb).max_length = 17];
  required string can_bus_id = 2 [(nanopb).max_length = 4];
}

message ApkConfig {
  required string id = 1 [(nanopb).max_length = 17];
}

message NetgraphConfig {
  required string id = 1 [(nanopb).max_length = 17];
}
